% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulateData.R
\name{.clusterAroundCells}
\alias{.clusterAroundCells}
\title{Cluster Point Around Cells}
\usage{
.clusterAroundCells(
  clusterData,
  cellVarData,
  stageName,
  reduceEdge,
  cells,
  clusterCells,
  kappas,
  minPts = 1
)
}
\arguments{
\item{clusterData}{Data.frame with columns x, y, cellType, Image, Person, and
Stage. These names are required.}

\item{stageName}{String inidicating the outcome name that should be given.}

\item{reduceEdge}{Numeric indicating how far from edge agents
should be placed. Note the current figure size is \link{0,1}x\link{0,1}.}

\item{cells}{Vector indicating the agents that are clustering.}

\item{clusterCells}{Vector indicating the agents in which each agent in cells
will cluster around. These should be found in clusterData column
cellType. Corresponds to cells.}

\item{kappas}{Numeric vector directing the number of agents per type per
image. Corresponds to cells.}

\item{minPts}{(Optional) Numeric indicating the minimum number of points.
Although potentially distributive to the process, the default is 1 to
ensure the cells are placed and any cells that cluster around these can
be placed.}
}
\value{
Data.frame containing each point in the defined clustered patterns.
Note, this does not include the data that it clustered around.

The data.frame has columns for outcome, x coordinate, y coordinate, agent
type, unit, and unique repeated measure id.
}
\description{
This (internal) function generates cells that cluster around the given
points.
}
\details{
Upcoming: Convert from cells to agents. Allow different clusterData column
names.
}
\examples{
# See code for simulatePP. This is not an outward function so won't be
#     viewable.
}
