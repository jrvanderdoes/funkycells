% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modifyData.R
\name{getCountData}
\alias{getCountData}
\title{Get Cell Count Data}
\usage{
getCountData(cell_data, outcome, unit, repeatedId = NULL, data_append = NULL)
}
\arguments{
\item{cell_data}{Data.frame of cell data information. Must have cellType
column. Future extensions will remove this restriction.}

\item{outcome}{(Optional) String indicating the outcome column name in data.
Default is the first column of data.}

\item{unit}{(Optional) String indicating the unit column name in data.
Default is the second column of data.}

\item{repeatedId}{(Optional) String indicating the repeated measure column
name in data (if present). Default is NULL indicating no repeated measures.}

\item{data_append}{(Optional) Data.frame with outcome, patient that the
results can be appended to if desired. Default is NULL.}
}
\value{
List with two elements:
\enumerate{
\item dat: Data.frame with outcome, unit, any data_append and the count
data. Columns of the count data are named after the cellType and are given
in the next list entry.
\item cells: Vector of cellTypes, i.e. the column names for the new count
data. This is treated as meta data for funkyForest.
}
}
\description{
This (underwork) function gets the average cell counts per image. It is
classified as underwork because it requires the 'cellType' column.
}
\examples{
dat <- simulatePP(
  cellVarData =
    data.frame(
      "stage" = c(0, 1),
      "A" = c(0, 0),
      "B" = c(1 / 50, 1 / 100),
      "C" = c(1 / 100, 1 / 100)
    ),
  cellKappaData = data.frame(
    "cell" = c("A", "B","C"),
    "clusterCell" = c(NA, "A",NA),
    "kappa" = c(20, 5, 10)
  ),
  peoplePerStage = 10,
  imagesPerPerson = 2,
  silent = FALSE
)

# Use Case 1
data_ct <- getCountData(dat,'Stage','Person','Image')

\dontrun{
dat_mod <- funkyModel(data = data_ct$dat,
             outcome='Stage',unit = 'Person',
             metaNames = data_ct$cells,
             synthetics = 25,nTrees = 50)
}


# Use Case 2
\dontrun{
dat <- simulatePP(
  cellVarData =
    data.frame(
      "stage" = c(0, 1),
      "A" = c(0, 0),
      "B" = c(1 / 50, 1 / 100),
      "C" = c(1 / 100, 1 / 100),
      "D" = c(1 / 50, 1 / 100)
    ),
  cellKappaData = data.frame(
    "cell" = c("A", "B","C","D"),
    "clusterCell" = c(NA, "A",NA,"B"),
    "kappa" = c(20, 5, 10, 4)
  ),
  peoplePerStage = 15,
  imagesPerPerson = 2,
  silent = FALSE
)

pcaData <- getKsPCAData(dat,
  repeatedUniqueId = "Image",
  xRange = c(0, 1), yRange = c(0, 1), silent = FALSE
)
data_ct1 <- getCountData(dat,'Stage','Person','Image',data_append=pcaData)

dat_mod <- funkyModel(data = data_ct1$dat,
                      outcome='Stage',unit = 'Person',
                      metaNames = data_ct1$cells,
                      synthetics = 25,nTrees = 50)
}
}
