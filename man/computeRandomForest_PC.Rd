% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomForest_PC.R
\name{computeRandomForest_PC}
\alias{computeRandomForest_PC}
\title{Compute Random Forest for Data with multiple PC (Along With Meta-Variables)}
\usage{
computeRandomForest_PC(
  data,
  outcome = colnames(data)[1],
  unit = colnames(data)[2],
  repeatedId = NULL,
  nTrees = 1000,
  varImpPlot = T,
  metaNames = NULL
)
}
\arguments{
\item{data}{Data.frame of outcome and predictors (PCs and meta-variables).
Note, currently Unit or repeated measures should not be included.
Generally use the results from getPCAData, potentially with meta-
variables attached.}

\item{outcome}{(Optional) String indicating the outcome column name in data}

\item{nTrees}{(Optional) Numeric indicating the number of trees to use in the
random forest model. Default is 1000.}

\item{varImpPlot}{(Optional) Boolean indicating if variable importance plots
should also be returned with the model. Default is TRUE.}

\item{metaNames}{(Optional) Vector with the column names of data that
correspond to metavariables. Default is NULL.}
}
\value{
A list with two (three) entries
1. model: List of CART that builds the andom forest model
2. varImportanceData: Data.frame for variable importance information
3. (Optional) varImportancePlot: Variable importance plots.
}
\description{
This function creates a random forest model for data with PCs and
meta-variables. This includes proper combination for variable importance.
Recommend to users to use randomForest_CVPC in general and perhaps just
this for a final model
}
\details{
Upcoming: See TEST comment
Drop parts to make smaller memory impact.
https://rstudio-pubs-static.s3.amazonaws.com/381812_7b5343e0f1a7403fba31ff7d45cf6d88.html
}
\examples{
data <- simulatePP()
pcaData <- getPCAData(data=data, repeatedUniqueId='Image',
                      xRange = c(0,1),  yRange = c(0,1), silent=F)
RF1 <- computeRandomForest_PC(data=pcaData[-2])

pcaMeta <- simulateMeta(pcaData)
RF2 <- computeRandomForest_PC(pcaMeta[-2],
                               metaNames=c("randUnif","randBin","rNorm",
                                           "corrUnif","corrBin","corrNorm"))
}
