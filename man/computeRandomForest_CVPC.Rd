% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomForest_CVPC.R
\name{computeRandomForest_CVPC}
\alias{computeRandomForest_CVPC}
\title{Fit a Random Forest model with PC data (Using CV for Improvements)}
\usage{
computeRandomForest_CVPC(
  data,
  K = 10,
  outcome = colnames(data)[1],
  unit = colnames(data)[2],
  repeatedId = NULL,
  metaNames = NULL,
  cellData = NULL,
  syntheticKs = 100,
  syntheticMetas = 100,
  generalSyntheticK = T,
  curvedSigSims = 100,
  alpha = 0.05,
  silent = F,
  rGuessSims = 500,
  alignmentMethod = c("Add", "Mult"),
  subsetPlotSize = 50,
  nTrees = 1000
)
}
\arguments{
\item{data}{Data.frame of outcome and predictors (PCs and meta-variables).
Generally use the results from getPCAData, potentially with meta-
variables attached.}

\item{K}{(Optional) Numeric indicating the number of folds to use in K-fold
CV. The default is 10.}

\item{outcome}{(Optional) String indicating the column name with the outcome
in both data and cellData. Default is the first column of data.}

\item{unit}{(Optional) String indicating the column name with the unit in
both data and cellData. Default is the second column of data.}

\item{repeatedId}{(Optional) String indicating the column name with the
unique id from repeated measures in both data and cellData. Default is
NULL.}

\item{metaNames}{(Optional) Vector indicating the meta-variables to be
considered. Default is NULL.}

\item{cellData}{(Optional) Data.frame indicating the cells used to create
data. It contains outcome, unit, (possibly) repeatedId, agentType.}

\item{syntheticKs}{(Optional) Numeric indicating the number of variables
in the K noise groups. If the value is 0, no K noise variables are
generated. Default is 100.}

\item{syntheticMetas}{(Optional) Numeric indicating the number of variables
in the meta noise groups. If the value is 0, no meta noise variables are
generated. Default is 100.}

\item{generalSyntheticK}{(Optional) Boolean indicating if a general K noise
group should be used or specialized K noise groups should be used.
Default is TRUE.}

\item{curvedSigSims}{(Optional)}

\item{alpha}{(Optional) Numeric in (0,1) indicating the significance used
throughout the analysis. Default is 0.05.

This is used in selection of noise variables and in building the CV
intervals.}

\item{silent}{(Optional) Boolean indicating if output should be suppressed
when the function is running. Default is FALSE.}

\item{rGuessSims}{(Optional) Numeric value indicating the number of
simulations used for guessing and creating the guess estimate on the
plot. Default is 500.}

\item{alignmentMethod}{(Optional) String indicating the method of aligning
variables via noise variables. The options are 'Add', 'Mult', or c('Add',
'Mult'). The default value is c('Add','Mult').}

\item{subsetPlotSize}{(Optional) Numeric indicating the number of top
variables to include in a subset graph (note if there are less variables)
than this value indicates then no subset graph will be produced. Default
is 50.}

\item{nTrees}{(Optional) Numeric indicating the number of trees in each
forest. The default is 1000.}
}
\value{
List with the following items:
\enumerate{
\item Gini: Data.frame with the results of gini indices from the
models and CV. The columns are var, avg, sd, lower, and
upper. The columns lower and upper are made with
significance alpha.
\item VI: Data.frame with the results of variable importance indices
from the models and CV. The columns are var, avg, sd,
lower, and upper. The columns lower and upper are made with
significance alpha.
\item Accuracy: Data.frame with results of cross validation. The
columns are avg, sd, lower and upper.
\item NoiseCurve: (Optional) Contains columns for noise curve (orange)
\item varImpPlot: ggplot2 object (may be in list or seperate) for a
plot of both gini and vi plots. See following
descriptions.
\enumerate{
\item viPlot: ggplot2 object for a plot of vi plot. This
will display ordered underlying functions and
meta-variables with point estimates,
intervals, and the red (standardized) noise
cutoff. Values are based on variable
importance values.
\item giniPlot: ggplot2 object for a plot of gini plot.
This will display ordered underlying
functions and meta-variables with point
estimates, intervals, and the red
(standardized) noise cutoff. Values are
based on gini index values.
}
\item Subset (Optional) These next parts are similar to the previous
part, but subset figures. Only the top subsetPlotSize number of
variables are displayed in the graph - for better seeing
interesting patterns.
}
}
\description{
The function fits a random forest model to the data along with using cross-
validation to quantify variable importance.
}
\details{
Warning: If there are no sythentics, this may break (will fix it eventually)
}
\examples{
dat <- simulatePP(cellVarData=
                       data.frame('stage'=c(0,1),
                                  'A'=c(0,0),
                                  'B'=c(1/50,1/50)),
                   cellKappaData=data.frame(
                                  'cell'=c('A','B'),
                                  'clusterCell'=c(NA,'A'),
                                  'kappa'=c(20,5)),
                   peoplePerStage=100,
                   imagesPerPerson=1,
                   reduceEdge=0.025,
                   silent=F )
pcaData <- getPCAData(dat,repeatedUniqueId='Image',
                          xRange = c(0,1),  yRange = c(0,1), silent=F)
pcaMeta <- simulateMeta(pcaData,
                metaInfo = data.frame(
                      'var'=c('randUnif','randBin','corrNorm'),
                      'rdist'=c('runif','rbinom','rnorm'),
                      'Stage_0'=c('0.5','0.5','1'),
                      'Stage_1'=c('0.5','0.5','2')))
rfcv <- computeRandomForest_CVPC(data=pcaMeta,repeatedId='Image',
                                 metaNames=c('randUnif','randBin','corrNorm'),
                                 cellData=dat)
}
