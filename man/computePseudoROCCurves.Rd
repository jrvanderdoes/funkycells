% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pseudoROCCurves.R
\name{computePseudoROCCurves}
\alias{computePseudoROCCurves}
\title{Compute Pseudo-ROC Curves}
\usage{
computePseudoROCCurves(trueOutcomes, modelPercents)
}
\arguments{
\item{trueOutcomes}{Vector of the true results}

\item{modelPercents}{Data.frame with columns named after the true outcomes,
giving the percent of selecting that outcome. This is what is returned
predict.RandomForest_PC with type='all' in object \code{PredPerc[-1]} (first
column is the predictions).}
}
\value{
ggplot object containing the ROC curves.
}
\description{
An receiver operating characteristic (ROC) curve is a curve showing the
performance of a classification model at all classification thresholds.
True ROC can only be computed for two-options, but we can consider each
classification, i.e. prediction, correct or incorrect and overlay the
curves. Note this means the lines may cover each other and be difficult to
see.
}
\details{
This function requires the package 'pROC' to be installed.
}
\examples{
set.seed(123)
data_pp_roc <- simulatePP(
  cellVarData =
    data.frame(
      "stage" = c(0, 1),
      "A" = c(0, 0),
      "B" = c(1 / 50, 1 / 50)
    ),
  cellKappaData = data.frame(
    "cell" = c("A", "B"),
    "clusterCell" = c(NA, "A"),
    "kappa" = c(20, 5)
  ),
  peoplePerStage = 10,
  imagesPerPerson = 1,
  silent = FALSE
)
# Caution, in general use more than 5 nTrees (Default is 500)
pcaData_roc <- getKsPCAData(data_pp_roc,
  repeatedUniqueId = "Image",
  xRange = c(0, 1), yRange = c(0, 1), silent = FALSE
)
RF_roc <- funkyForest(data = pcaData_roc[-2], nTrees = 5)
pred_roc <- predict_funkyForest(
  model = RF_roc$model,
  data_pred = pcaData_roc[-2],
  data = pcaData_roc[-2]
)
computePseudoROCCurves(pcaData_roc$Stage, pred_roc$PredPerc[-1])
}
