% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomForest_CVPC.R
\name{.generateSyntheticMetas}
\alias{.generateSyntheticMetas}
\title{Generate Synthetic Metas}
\usage{
.generateSyntheticMetas(
  metaNames,
  syntheticMetas,
  data,
  outcome,
  unit,
  repeatedId
)
}
\arguments{
\item{metaNames}{Vector of meta variable names as columns in data.}

\item{syntheticMetas}{Numeric indicating the number of synthetic meta
variables in each noise group.}

\item{data}{Data.frame of outcome and predictors (PCs and meta-variables).
Note, currently Unit or repeated measures should not be included.
Generally use the results from getPCAData, potentially with meta-
variables attached.}

\item{outcome}{String indicating the column name with the outcome in
cellData.}

\item{unit}{String indicating the column name with the unit in cellData.}

\item{repeatedId}{String indicating the column name with the unique id from
repeated measures in cellData.}
}
\value{
List with two elements:
\enumerate{
\item noiseMap: Data.frame for matching noise variables to noise
groups. The columns are noiseVar (the synthetic
interactions of which there are syntheticMetas),
dataVar (name of noise group), and synType ('Meta',
which will compare to 'K' from other functions).
\item syntheticMetaData: Data.frame with results and synthetic meta
variables. This contains the outcome, unit, and
(potentially) repeatedId along with synthetic meta
variables.
}
}
\description{
This (internal) function generates the synthetic meta-variables and also
returns the noiseMap between noise meta variables and underlying meta
variables.
}
\examples{
# See code for computeRandomForest_CVPC. This is not an outward function so
#     won't be viewable.
}
